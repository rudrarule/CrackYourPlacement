class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int max = Integer.MIN_VALUE;

      
        for (int pile : piles) {
            max = Math.max(pile, max);
        }

        int start = 1; 
        int end = max; 

        while (start < end) {
            int mid = (end + start) / 2;
            int hours = calculateHours(piles, mid);

            if (hours <= h) {
                end = mid; 
            } else {
                start = mid + 1; 
            }
        }
        return end; 
    }

    
    public int calculateHours(int[] piles, int speed) {
        int hours = 0;
        for (int pile : piles) {
            hours += Math.ceil((double) pile / speed); 
        }
        return hours;
    }
}
