class Solution {
    public int MinCoin(int[] nums, int amount) {
        int[][] dp = new int[nums.length][amount + 1];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        int result = helper(nums, amount, 0, dp);
        return result == Integer.MAX_VALUE ? -1 : result;
    }

    private int helper(int[] nums, int amount, int i, int[][] dp) {
        
        if (amount == 0) {
            return 0;
        }
        if (amount < 0 || i >= nums.length) {
            return Integer.MAX_VALUE;
        }

        
        if (dp[i][amount] != -1) {
            return dp[i][amount];
        }

        
        int include = helper(nums, amount - nums[i], i, dp);
        if (include != Integer.MAX_VALUE) {
            include += 1;
        }
        
        int exclude = helper(nums, amount, i + 1, dp);
        
        
        dp[i][amount] = Math.min(include, exclude);
        return dp[i][amount];
    }
}
