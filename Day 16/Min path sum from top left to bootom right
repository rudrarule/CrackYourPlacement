class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        int[][] dp = new int[m][n];

        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }

        return helper(grid, m - 1, n - 1, dp);
    }

    public int helper(int[][] grid, int i, int j, int[][] dp) {
        if (i < 0 || j < 0) {
            return Integer.MAX_VALUE;
        }
        if (i == 0 && j == 0) {
            return grid[0][0];
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }

        int x1 = helper(grid, i - 1, j, dp);
        int x2 = helper(grid, i, j - 1, dp) ;

        int ans = Math.min(x1, x2)+grid[i][j];
         dp[i][j] = ans;
        return ans;
    }
}
