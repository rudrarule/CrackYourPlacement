import java.util.Arrays;

class Solution {
    public int coinChange(int[] coins, int amount) {

        Arrays.sort(coins);

        int[][] dp = new int[coins.length][amount + 1];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        int result = helper(coins, amount, coins.length - 1,dp);

        return result == Integer.MAX_VALUE ? -1 : result;
    }

    private int helper(int[] coins, int amount, int i, int[][] dp) {
        if (amount == 0) return 0;  
        if (i < 0 || amount < 0) return Integer.MAX_VALUE;  
        
        if (dp[i][amount] != -1) return dp[i][amount];  

        int exclude = helper(coins, amount, i - 1, dp);  
        int include = helper(coins, amount - coins[i], i, dp); 

        if (include != Integer.MAX_VALUE) include += 1; 

        
        dp[i][amount] = Math.min(exclude, include);
        return dp[i][amount];
    }
}
