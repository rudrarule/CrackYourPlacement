import java.util.Arrays;

class Solution {
    public int findLength(int[] nums1, int[] nums2) {
        int[][] dp = new int[nums1.length][nums2.length];
        for (int[] row : dp) {
            Arrays.fill(row, -1);
        }
        int maxLength = 0;
        for (int i = 0; i < nums1.length; i++) {
            for (int j = 0; j < nums2.length; j++) {
                maxLength = Math.max(maxLength, helper(nums1, nums2, dp, i, j));
            }
        }
        return maxLength;
    }

    public int helper(int[] nums1, int[] nums2, int[][] dp, int i, int j) {
        if (i < 0 || j < 0) {
            return 0;
        }
        if (dp[i][j] != -1) {
            return dp[i][j];
        }
        if (nums1[i] == nums2[j]) {
            dp[i][j] = 1 + helper(nums1, nums2, dp, i - 1, j - 1);
        } else {
            dp[i][j] = 0;
        }
        return dp[i][j];
    }
}
