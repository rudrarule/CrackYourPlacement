/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     int maxi=0; 
    public int diameterOfBinaryTree(TreeNode root) {
      
       FindMax(root);
       return maxi;
        
    }
    public int FindMax(TreeNode root){
      if(root==null){
          return 0;
      }

      int lht=FindMax(root.left);
      int rht=FindMax(root.right);

      maxi=Math.max(maxi,lht+rht);

      return 1+Math.max(lht,rht);


    }
}
